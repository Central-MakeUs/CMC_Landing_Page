{"version":3,"file":"component---src-pages-project-tsx-695a8752a83cbe092321.js","mappings":"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","sources":["webpack://cmc_landing_page/./src/components/floating-button/floating-button.tsx","webpack://cmc_landing_page/./src/components/floating-button/hooks/use-floating-button.tsx","webpack://cmc_landing_page/./src/components/floating-button/floating-button.module.scss","webpack://cmc_landing_page/./src/components/seo.tsx","webpack://cmc_landing_page/./src/utils/image.ts","webpack://cmc_landing_page/./src/views/project/components/card/card.tsx","webpack://cmc_landing_page/./src/views/project/components/card/card.module.scss","webpack://cmc_landing_page/./src/views/project/project.tsx","webpack://cmc_landing_page/./src/views/project/project.module.scss"],"sourcesContent":["import clsx from 'clsx'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nimport * as css from './floating-button.module.scss'\nimport { useFloatingButton } from './hooks'\n\nexport const FloatingButton = () => {\n  const { isVisible, scrollToTop } = useFloatingButton()\n  return (\n    <button type=\"button\" onClick={scrollToTop} className={clsx(css.button, { [css.visible]: isVisible })}>\n      <StaticImage src=\"./images/top-button.png\" alt=\"위를 가리키는 흰색 화살표\" />\n    </button>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst SCROLL_THRESHOLD = 200\n\nexport const useFloatingButton = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  const handleScroll = () => {\n    const currentScrollY = window.scrollY\n    setIsVisible(currentScrollY > SCROLL_THRESHOLD)\n  }\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  return { isVisible, scrollToTop }\n}\n","// extracted by mini-css-extract-plugin\nexport var button = \"floating-button-module--button--644e8\";\nexport var visible = \"floating-button-module--visible--84a20\";","import { graphql, useStaticQuery } from 'gatsby'\nimport type { PropsWithChildren } from 'react'\n\ntype SeoProps = {\n  title?: string\n  description?: string\n  heroImage?: string\n  pathname: string\n}\n\ntype SeoQuery = {\n  file: {\n    publicURL: string\n  }\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      siteUrl: string\n    }\n  }\n}\n\nexport const Seo = ({ title, description, heroImage, pathname, children }: PropsWithChildren<SeoProps>) => {\n  const data = useStaticQuery<SeoQuery>(graphql`\n    query SeoQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n      file(relativePath: { eq: \"OGImage.png\" }) {\n        publicURL\n      }\n    }\n  `)\n\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = data.site.siteMetadata\n  const { publicURL: defaultImage } = data.file\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname}`,\n    image: `${siteUrl}${heroImage || defaultImage}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <link rel=\"canonical\" href={seo.url} />\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {/* Open Graph / Facebook */}\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:image\" content={seo.image} />\n      {/* Twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta property=\"twitter:image\" content={seo.image} />\n      {children}\n    </>\n  )\n}\n","import type { IGatsbyImageData } from 'gatsby-plugin-image'\n\nexport const getRefinedImage = (image: IGatsbyImageData | undefined) => {\n  if (image === undefined) throw new Error('이미지가 존재하지 않습니다.')\n\n  return image\n}\n","import { GatsbyImage, type IGatsbyImageData } from 'gatsby-plugin-image'\n\nimport * as css from './card.module.scss'\n\ntype Link = {\n  android: string\n  ios: string\n}\n\ntype Props = {\n  name: string\n  year: string\n  description: string\n  link: Link\n  image: IGatsbyImageData\n}\n\nexport const Card = ({ name, description, year, image, link }: Props) => {\n  return (\n    <li className={css.card}>\n      <figure>\n        <GatsbyImage image={image} alt={name} className={css.image} />\n        <figcaption>\n          <h2 className={css.name}>{name}</h2>\n          <span className={css.year}>{year}기</span>\n          <p className={css.description}>{description}</p>\n          <div className={css.link_group}>\n            {link.ios ? <a href={link.ios}>iOS</a> : <span>iOS</span>}\n            <span className={css.divider} />\n            {link.android ? <a href={link.android}>AOS</a> : <span>AOS</span>}\n          </div>\n        </figcaption>\n      </figure>\n    </li>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var card = \"card-module--card--ab5fb\";\nexport var description = \"card-module--description--98bd5\";\nexport var divider = \"card-module--divider--7a67e\";\nexport var image = \"card-module--image--4d48a\";\nexport var link_group = \"card-module--link_group--cb1ec\";\nexport var name = \"card-module--name--6b866\";\nexport var year = \"card-module--year--21a5e\";","import clsx from 'clsx'\nimport type { HeadProps, PageProps } from 'gatsby'\nimport { useMemo, useState } from 'react'\n\nimport { FloatingButton, Seo } from '@/components'\nimport { getRefinedImage } from '@/utils'\n\nimport { Card } from './components'\nimport * as css from './project.module.scss'\n\nconst ProjectPage = ({\n  data: {\n    allAppJson: { nodes: apps },\n  },\n}: PageProps<Queries.ProjectQuery>) => {\n  const allYear = useMemo(() => new Set(apps.map((node) => node.year)), [apps])\n  const tags = ['All', ...allYear]\n  const [currentTag, setCurrentTag] = useState('All')\n  const refinedProjects = useMemo(\n    () => (currentTag === 'All' ? apps : apps.filter((node) => node.year === currentTag)),\n    [currentTag, apps],\n  )\n\n  return (\n    <main className={css.main}>\n      <div className={css.background_header}>\n        <h2>CMC PROJECT</h2>\n        <div className={css.background_container}>\n          <div className={css.background} />\n        </div>\n      </div>\n      <nav className={css.nav}>\n        <ul>\n          {tags.map((menu) => (\n            <li key={menu}>\n              <button\n                type=\"button\"\n                onClick={() => setCurrentTag(menu)}\n                className={clsx({ [css.active]: currentTag === menu })}\n              >\n                {menu === 'All' ? '전체' : menu}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <ul className={css.grid_container}>\n        {refinedProjects.map(({ id, name, description, year, logo, link }) => (\n          <Card\n            key={id}\n            name={name}\n            year={year}\n            image={getRefinedImage(logo?.childImageSharp?.gatsbyImageData)}\n            description={description}\n            link={link}\n          />\n        ))}\n      </ul>\n      <FloatingButton />\n    </main>\n  )\n}\n\nexport default ProjectPage\n\nexport const Head = ({ location: { pathname } }: HeadProps) => {\n  return <Seo pathname={pathname} />\n}\n","// extracted by mini-css-extract-plugin\nexport var active = \"project-module--active--5984e\";\nexport var background = \"project-module--background--73e34\";\nexport var background_container = \"project-module--background_container--f806f\";\nexport var background_header = \"project-module--background_header--62985\";\nexport var grid_container = \"project-module--grid_container--dee0b\";\nexport var main = \"project-module--main--56a37\";\nexport var nav = \"project-module--nav--7defd\";"],"names":["FloatingButton","isVisible","scrollToTop","useFloatingButton","setIsVisible","useState","handleScroll","currentScrollY","window","scrollY","useEffect","addEventListener","removeEventListener","scrollTo","top","behavior","_jsx","type","onClick","className","clsx","children","StaticImage","src","alt","__imageData","require","Seo","_ref","title","description","heroImage","pathname","data","useStaticQuery","defaultTitle","defaultDescription","siteUrl","site","siteMetadata","publicURL","defaultImage","file","seo","url","image","_jsxs","_Fragment","rel","href","name","content","property","getRefinedImage","undefined","Error","Card","year","link","GatsbyImage","ios","android","allAppJson","nodes","apps","allYear","useMemo","Set","map","node","tags","concat","_toConsumableArray","currentTag","setCurrentTag","refinedProjects","filter","menu","_ref2","_logo$childImageSharp","id","logo","childImageSharp","gatsbyImageData","Head","_ref3","location"],"sourceRoot":""}